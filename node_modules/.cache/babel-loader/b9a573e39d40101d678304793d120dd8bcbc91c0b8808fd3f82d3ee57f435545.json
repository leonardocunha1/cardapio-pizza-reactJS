{"ast":null,"code":"// import { useState } from \"react\";\n// import { cardapio } from \"./arrayPizzasInicial\";\n// import \"./index.css\";\n\n// export default function App() {\n//   const [listaCardapio, setListaCardapio] = useState(cardapio);\n//   const [formIsOpen, setFormIsOpen] = useState(false);\n//   const [pizzaSelected, setPizzaSelected] = useState(null);\n//   const [cart, setCart] = useState([]);\n\n//   function ToggleOpenForm() {\n//     setFormIsOpen((item) => !item);\n//   }\n\n//   function handleAddItems(item) {\n//     setListaCardapio((items) => [...items, item]);\n//     setFormIsOpen(false);\n//   }\n\n//   function handleSelectedPizza(item) {\n//     setPizzaSelected((itematual) => (itematual?.id === item.id ? null : item));\n//   }\n\n//   function handleAddToCart(item) {\n//     if (cart.some((cartItem) => cartItem.id === item.id)) {\n//       setCart((items) =>\n//         items.map((cartItem) =>\n//           cartItem.id === item.id\n//             ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//             : cartItem\n//         )\n//       );\n//     } else {\n//       setCart((items) => [...items, { ...item }]);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       {/* <Header /> */}\n//       <ButtonAddPizza onClick={ToggleOpenForm} />\n//       <div className=\"main-area\">\n//         <ItemsList\n//           listaCardapio={listaCardapio}\n//           onSelectedPizza={handleSelectedPizza}\n//         />\n//         <Cart />\n//       </div>\n//       {formIsOpen && (\n//         <>\n//           <Overlay onClick={ToggleOpenForm} />\n//           <FormAddPizza\n//             onAddItem={handleAddItems}\n//             onToggleOpen={ToggleOpenForm}\n//           />\n//         </>\n//       )}\n//       {pizzaSelected && (\n//         <>\n//           <Overlay onClick={() => setPizzaSelected(null)} />\n//           <ModalPizza\n//             pizzaSelected={pizzaSelected}\n//             setPizzaSelected={setPizzaSelected}\n//           />\n//         </>\n//       )}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n\n// function ButtonAddPizza({ onClick }) {\n//   return (\n//     <button className=\"btn-add-pizza\" onClick={onClick}>\n//       Adicionar Pizza ao card√°pio\n//     </button>\n//   );\n// }\n\n// function ItemsList({ listaCardapio, onSelectedPizza }) {\n//   return (\n//     <ul className=\"pizza-area\">\n//       {listaCardapio.map((item) => (\n//         <Item item={item} key={item.id} onClick={onSelectedPizza} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Item({ item, onClick }) {\n//   return (\n//     <li className=\"pizzas\">\n//       <img src={item.image} alt={item.name} />\n//       <h3>{item.name}</h3>\n//       <p className=\"pizzas-desc\">{item.description}</p>\n//       <p className=\"pizzas-price\">R$ {item.prices.large},00</p>\n//       <button onClick={() => onClick(item)}>+</button>\n//     </li>\n//   );\n// }\n\n// function Overlay({ onClick }) {\n//   return <div className=\"overlay\" onClick={onClick}></div>;\n// }\n\n// function FormAddPizza({ onAddItem, onToggleOpen }) {\n//   const [nomePizza, setNomePizza] = useState(\"\");\n//   const [descricaoPizza, setDescricaoPizza] = useState(\"\");\n//   const [nomeImagem, setNomeImagem] = useState(\"\");\n//   const [valorPequeno, setValorPequeno] = useState(\"\");\n//   const [valorMedio, setValorMedio] = useState(\"\");\n//   const [valorGrande, setValorGrande] = useState(\"\");\n\n//   function handleSubmitPizzaAdd(e) {\n//     e.preventDefault();\n\n//     if (\n//       !nomePizza ||\n//       !descricaoPizza ||\n//       !nomeImagem ||\n//       !valorPequeno ||\n//       !valorMedio ||\n//       !valorGrande\n//     ) {\n//       return;\n//     }\n\n//     const id = crypto.randomUUID();\n//     const novaPizza = {\n//       id,\n//       name: nomePizza,\n//       description: descricaoPizza,\n//       image: nomeImagem,\n//       sizes: [\"Pequena\", \"M√©dia\", \"Grande\"],\n//       prices: { small: valorPequeno, medium: valorMedio, large: valorGrande },\n//     };\n\n//     onAddItem(novaPizza);\n\n//     setNomePizza(\"\");\n//     setDescricaoPizza(\"\");\n//     setNomeImagem(\"\");\n//     setValorPequeno(\"\");\n//     setValorMedio(\"\");\n//     setValorGrande(\"\");\n//   }\n\n//   return (\n//     <form className=\"form-add-pizza\" onSubmit={handleSubmitPizzaAdd}>\n//       <button className=\"btn-form-close\" onClick={onToggleOpen}>\n//         X\n//       </button>\n//       <h3>Nova Pizza</h3>\n//       <div>\n//         <label>Nome da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={nomePizza}\n//           onChange={(e) => setNomePizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Descri√ß√£o da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={descricaoPizza}\n//           onChange={(e) => setDescricaoPizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>URL da imagem</label>\n//         <input\n//           type=\"text\"\n//           value={nomeImagem}\n//           onChange={(e) => setNomeImagem(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <p>Valores das pizzas</p>\n//       <div>\n//         <label>Tamanho pequeno (P)</label>\n//         <input\n//           type=\"number\"\n//           value={valorPequeno}\n//           onChange={(e) => setValorPequeno(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho m√©dio (M)</label>\n//         <input\n//           type=\"number\"\n//           value={valorMedio}\n//           onChange={(e) => setValorMedio(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho Grande (G)</label>\n//         <input\n//           type=\"number\"\n//           value={valorGrande}\n//           onChange={(e) => setValorGrande(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button className=\"btn-form-add-pizza\">Adicionar</button>\n//     </form>\n//   );\n// }\n\n// function ModalPizza({ pizzaSelected, setPizzaSelected }) {\n//   const [quantity, setQuantity] = useState(1);\n//   const [sizePizzaSelected, setSizePizzaSelected] = useState(\n//     pizzaSelected.sizes[2]\n//   );\n//   const [price, setPrice] = useState(pizzaSelected.prices.large);\n\n//   // Fun√ß√£o para definir o tamanho da pizza e o pre√ßo correspondente\n//   function handleSizeChange(size) {\n//     setSizePizzaSelected(size);\n//     setQuantity(1);\n\n//     if (size === \"Pequena\") {\n//       setPrice(pizzaSelected.prices.small);\n//     } else if (size === \"M√©dia\") {\n//       setPrice(pizzaSelected.prices.medium);\n//     } else {\n//       setPrice(pizzaSelected.prices.large);\n//     }\n//   }\n\n//   function handleIncrease() {\n//     setQuantity((prev) => prev + 1);\n//   }\n\n//   function handleDecrease() {\n//     setQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n//   }\n\n//   return (\n//     <div className=\"modal-pizza\">\n//       <button className=\"btn-form-close\" onClick={() => setPizzaSelected(null)}>\n//         X\n//       </button>\n//       <h3>{pizzaSelected.name}</h3>\n//       <img src={pizzaSelected.image} alt={pizzaSelected.name} />\n//       <div className=\"modal-pizza-sizes\">\n//         {pizzaSelected.sizes.map((size, index) => (\n//           <p\n//             key={index}\n//             className={`model-pizza-size ${\n//               sizePizzaSelected === size ? \"active-size\" : \"\"\n//             }`}\n//             onClick={() => handleSizeChange(size)} // Muda o tamanho e atualiza o pre√ßo\n//           >\n//             {size}\n//           </p>\n//         ))}\n//       </div>\n//       <p className=\"modal-pizza-desc\">{pizzaSelected.description}</p>\n//       <div className=\"modal-pizza-area-qtd-adc\">\n//         <div className=\"quantity-controls\">\n//           <button onClick={handleDecrease}>-</button>\n//           <p>{quantity}</p>\n//           <button onClick={handleIncrease}>+</button>\n//         </div>\n//         <div className=\"modal-pizza-addcart-price\">\n//           <p>R${price * quantity}.00</p>\n//           <button>Adicionar</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function Cart() {\n//   return (\n//     <div className=\"cart-area\">\n//       <h2>Carrinho üçï</h2>\n//       <ul>\n//         <CartItem />\n//         <CartItem />\n//         <CartItem />\n//       </ul>\n//       <div className=\"cart-area-sub\">\n//         <p>Subtotal</p>\n//         <p>R$ 60,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Desconto (-5%)</p>\n//         <p>R$ 5,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Entrega</p>\n//         <p>R$ 10,00</p>\n//       </div>\n//       <div className=\"cart-area-sub sem-borda\">\n//         <p>Total</p>\n//         <p>R$ 65,00</p>\n//       </div>\n//       <button className=\"btn-cart-finish\">Finalizar compra</button>\n//     </div>\n//   );\n// }\n\n// function CartItem() {\n//   return (\n//     <li>\n//       <div className=\"cart-item-left\">\n//         <img src=\"https://iili.io/JrJ47pa.png\" alt=\"Pizza\" />\n//         <p>\n//           <b>Calabresa</b> <span>(G)</span> <span>R$ 20,00</span>\n//         </p>\n//       </div>\n//       <div className=\"cart-item-right\">\n//         <button>-</button>\n//         <p>1</p>\n//         <button>+</button>\n//       </div>\n//     </li>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Leonardo/Desktop/react-estudo/projeto-cardapio/src/App.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { cardapio } from \"./arrayPizzasInicial\";\n// import \"./index.css\";\n\n// export default function App() {\n//   const [listaCardapio, setListaCardapio] = useState(cardapio);\n//   const [formIsOpen, setFormIsOpen] = useState(false);\n//   const [pizzaSelected, setPizzaSelected] = useState(null);\n//   const [cart, setCart] = useState([]);\n\n//   function ToggleOpenForm() {\n//     setFormIsOpen((item) => !item);\n//   }\n\n//   function handleAddItems(item) {\n//     setListaCardapio((items) => [...items, item]);\n//     setFormIsOpen(false);\n//   }\n\n//   function handleSelectedPizza(item) {\n//     setPizzaSelected((itematual) => (itematual?.id === item.id ? null : item));\n//   }\n\n//   function handleAddToCart(item) {\n//     if (cart.some((cartItem) => cartItem.id === item.id)) {\n//       setCart((items) =>\n//         items.map((cartItem) =>\n//           cartItem.id === item.id\n//             ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//             : cartItem\n//         )\n//       );\n//     } else {\n//       setCart((items) => [...items, { ...item }]);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       {/* <Header /> */}\n//       <ButtonAddPizza onClick={ToggleOpenForm} />\n//       <div className=\"main-area\">\n//         <ItemsList\n//           listaCardapio={listaCardapio}\n//           onSelectedPizza={handleSelectedPizza}\n//         />\n//         <Cart />\n//       </div>\n//       {formIsOpen && (\n//         <>\n//           <Overlay onClick={ToggleOpenForm} />\n//           <FormAddPizza\n//             onAddItem={handleAddItems}\n//             onToggleOpen={ToggleOpenForm}\n//           />\n//         </>\n//       )}\n//       {pizzaSelected && (\n//         <>\n//           <Overlay onClick={() => setPizzaSelected(null)} />\n//           <ModalPizza\n//             pizzaSelected={pizzaSelected}\n//             setPizzaSelected={setPizzaSelected}\n//           />\n//         </>\n//       )}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n\n// function ButtonAddPizza({ onClick }) {\n//   return (\n//     <button className=\"btn-add-pizza\" onClick={onClick}>\n//       Adicionar Pizza ao card√°pio\n//     </button>\n//   );\n// }\n\n// function ItemsList({ listaCardapio, onSelectedPizza }) {\n//   return (\n//     <ul className=\"pizza-area\">\n//       {listaCardapio.map((item) => (\n//         <Item item={item} key={item.id} onClick={onSelectedPizza} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Item({ item, onClick }) {\n//   return (\n//     <li className=\"pizzas\">\n//       <img src={item.image} alt={item.name} />\n//       <h3>{item.name}</h3>\n//       <p className=\"pizzas-desc\">{item.description}</p>\n//       <p className=\"pizzas-price\">R$ {item.prices.large},00</p>\n//       <button onClick={() => onClick(item)}>+</button>\n//     </li>\n//   );\n// }\n\n// function Overlay({ onClick }) {\n//   return <div className=\"overlay\" onClick={onClick}></div>;\n// }\n\n// function FormAddPizza({ onAddItem, onToggleOpen }) {\n//   const [nomePizza, setNomePizza] = useState(\"\");\n//   const [descricaoPizza, setDescricaoPizza] = useState(\"\");\n//   const [nomeImagem, setNomeImagem] = useState(\"\");\n//   const [valorPequeno, setValorPequeno] = useState(\"\");\n//   const [valorMedio, setValorMedio] = useState(\"\");\n//   const [valorGrande, setValorGrande] = useState(\"\");\n\n//   function handleSubmitPizzaAdd(e) {\n//     e.preventDefault();\n\n//     if (\n//       !nomePizza ||\n//       !descricaoPizza ||\n//       !nomeImagem ||\n//       !valorPequeno ||\n//       !valorMedio ||\n//       !valorGrande\n//     ) {\n//       return;\n//     }\n\n//     const id = crypto.randomUUID();\n//     const novaPizza = {\n//       id,\n//       name: nomePizza,\n//       description: descricaoPizza,\n//       image: nomeImagem,\n//       sizes: [\"Pequena\", \"M√©dia\", \"Grande\"],\n//       prices: { small: valorPequeno, medium: valorMedio, large: valorGrande },\n//     };\n\n//     onAddItem(novaPizza);\n\n//     setNomePizza(\"\");\n//     setDescricaoPizza(\"\");\n//     setNomeImagem(\"\");\n//     setValorPequeno(\"\");\n//     setValorMedio(\"\");\n//     setValorGrande(\"\");\n//   }\n\n//   return (\n//     <form className=\"form-add-pizza\" onSubmit={handleSubmitPizzaAdd}>\n//       <button className=\"btn-form-close\" onClick={onToggleOpen}>\n//         X\n//       </button>\n//       <h3>Nova Pizza</h3>\n//       <div>\n//         <label>Nome da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={nomePizza}\n//           onChange={(e) => setNomePizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Descri√ß√£o da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={descricaoPizza}\n//           onChange={(e) => setDescricaoPizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>URL da imagem</label>\n//         <input\n//           type=\"text\"\n//           value={nomeImagem}\n//           onChange={(e) => setNomeImagem(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <p>Valores das pizzas</p>\n//       <div>\n//         <label>Tamanho pequeno (P)</label>\n//         <input\n//           type=\"number\"\n//           value={valorPequeno}\n//           onChange={(e) => setValorPequeno(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho m√©dio (M)</label>\n//         <input\n//           type=\"number\"\n//           value={valorMedio}\n//           onChange={(e) => setValorMedio(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho Grande (G)</label>\n//         <input\n//           type=\"number\"\n//           value={valorGrande}\n//           onChange={(e) => setValorGrande(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button className=\"btn-form-add-pizza\">Adicionar</button>\n//     </form>\n//   );\n// }\n\n// function ModalPizza({ pizzaSelected, setPizzaSelected }) {\n//   const [quantity, setQuantity] = useState(1);\n//   const [sizePizzaSelected, setSizePizzaSelected] = useState(\n//     pizzaSelected.sizes[2]\n//   );\n//   const [price, setPrice] = useState(pizzaSelected.prices.large);\n\n//   // Fun√ß√£o para definir o tamanho da pizza e o pre√ßo correspondente\n//   function handleSizeChange(size) {\n//     setSizePizzaSelected(size);\n//     setQuantity(1);\n\n//     if (size === \"Pequena\") {\n//       setPrice(pizzaSelected.prices.small);\n//     } else if (size === \"M√©dia\") {\n//       setPrice(pizzaSelected.prices.medium);\n//     } else {\n//       setPrice(pizzaSelected.prices.large);\n//     }\n//   }\n\n//   function handleIncrease() {\n//     setQuantity((prev) => prev + 1);\n//   }\n\n//   function handleDecrease() {\n//     setQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n//   }\n\n//   return (\n//     <div className=\"modal-pizza\">\n//       <button className=\"btn-form-close\" onClick={() => setPizzaSelected(null)}>\n//         X\n//       </button>\n//       <h3>{pizzaSelected.name}</h3>\n//       <img src={pizzaSelected.image} alt={pizzaSelected.name} />\n//       <div className=\"modal-pizza-sizes\">\n//         {pizzaSelected.sizes.map((size, index) => (\n//           <p\n//             key={index}\n//             className={`model-pizza-size ${\n//               sizePizzaSelected === size ? \"active-size\" : \"\"\n//             }`}\n//             onClick={() => handleSizeChange(size)} // Muda o tamanho e atualiza o pre√ßo\n//           >\n//             {size}\n//           </p>\n//         ))}\n//       </div>\n//       <p className=\"modal-pizza-desc\">{pizzaSelected.description}</p>\n//       <div className=\"modal-pizza-area-qtd-adc\">\n//         <div className=\"quantity-controls\">\n//           <button onClick={handleDecrease}>-</button>\n//           <p>{quantity}</p>\n//           <button onClick={handleIncrease}>+</button>\n//         </div>\n//         <div className=\"modal-pizza-addcart-price\">\n//           <p>R${price * quantity}.00</p>\n//           <button>Adicionar</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function Cart() {\n//   return (\n//     <div className=\"cart-area\">\n//       <h2>Carrinho üçï</h2>\n//       <ul>\n//         <CartItem />\n//         <CartItem />\n//         <CartItem />\n//       </ul>\n//       <div className=\"cart-area-sub\">\n//         <p>Subtotal</p>\n//         <p>R$ 60,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Desconto (-5%)</p>\n//         <p>R$ 5,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Entrega</p>\n//         <p>R$ 10,00</p>\n//       </div>\n//       <div className=\"cart-area-sub sem-borda\">\n//         <p>Total</p>\n//         <p>R$ 65,00</p>\n//       </div>\n//       <button className=\"btn-cart-finish\">Finalizar compra</button>\n//     </div>\n//   );\n// }\n\n// function CartItem() {\n//   return (\n//     <li>\n//       <div className=\"cart-item-left\">\n//         <img src=\"https://iili.io/JrJ47pa.png\" alt=\"Pizza\" />\n//         <p>\n//           <b>Calabresa</b> <span>(G)</span> <span>R$ 20,00</span>\n//         </p>\n//       </div>\n//       <div className=\"cart-item-right\">\n//         <button>-</button>\n//         <p>1</p>\n//         <button>+</button>\n//       </div>\n//     </li>\n//   );\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}