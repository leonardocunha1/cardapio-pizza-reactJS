{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonardo\\\\Desktop\\\\react-estudo\\\\projeto-cardapio\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { useState } from \"react\";\n// import { cardapio } from \"./arrayPizzasInicial\";\n// import \"./index.css\";\n\n// export default function App() {\n//   const [listaCardapio, setListaCardapio] = useState(cardapio);\n//   const [formIsOpen, setFormIsOpen] = useState(false);\n//   const [pizzaSelected, setPizzaSelected] = useState(null);\n//   const [cart, setCart] = useState([]);\n\n//   function ToggleOpenForm() {\n//     setFormIsOpen((item) => !item);\n//   }\n\n//   function handleAddItems(item) {\n//     setListaCardapio((items) => [...items, item]);\n//     setFormIsOpen(false);\n//   }\n\n//   function handleSelectedPizza(item) {\n//     setPizzaSelected((itematual) => (itematual?.id === item.id ? null : item));\n//   }\n\n//   function handleAddToCart(item) {\n//     if (cart.some((cartItem) => cartItem.id === item.id)) {\n//       setCart((items) =>\n//         items.map((cartItem) =>\n//           cartItem.id === item.id\n//             ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//             : cartItem\n//         )\n//       );\n//     } else {\n//       setCart((items) => [...items, { ...item }]);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       {/* <Header /> */}\n//       <ButtonAddPizza onClick={ToggleOpenForm} />\n//       <div className=\"main-area\">\n//         <ItemsList\n//           listaCardapio={listaCardapio}\n//           onSelectedPizza={handleSelectedPizza}\n//         />\n//         <Cart />\n//       </div>\n//       {formIsOpen && (\n//         <>\n//           <Overlay onClick={ToggleOpenForm} />\n//           <FormAddPizza\n//             onAddItem={handleAddItems}\n//             onToggleOpen={ToggleOpenForm}\n//           />\n//         </>\n//       )}\n//       {pizzaSelected && (\n//         <>\n//           <Overlay onClick={() => setPizzaSelected(null)} />\n//           <ModalPizza\n//             pizzaSelected={pizzaSelected}\n//             setPizzaSelected={setPizzaSelected}\n//           />\n//         </>\n//       )}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n\n// function ButtonAddPizza({ onClick }) {\n//   return (\n//     <button className=\"btn-add-pizza\" onClick={onClick}>\n//       Adicionar Pizza ao card√°pio\n//     </button>\n//   );\n// }\n\n// function ItemsList({ listaCardapio, onSelectedPizza }) {\n//   return (\n//     <ul className=\"pizza-area\">\n//       {listaCardapio.map((item) => (\n//         <Item item={item} key={item.id} onClick={onSelectedPizza} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Item({ item, onClick }) {\n//   return (\n//     <li className=\"pizzas\">\n//       <img src={item.image} alt={item.name} />\n//       <h3>{item.name}</h3>\n//       <p className=\"pizzas-desc\">{item.description}</p>\n//       <p className=\"pizzas-price\">R$ {item.prices.large},00</p>\n//       <button onClick={() => onClick(item)}>+</button>\n//     </li>\n//   );\n// }\n\n// function Overlay({ onClick }) {\n//   return <div className=\"overlay\" onClick={onClick}></div>;\n// }\n\n// function FormAddPizza({ onAddItem, onToggleOpen }) {\n//   const [nomePizza, setNomePizza] = useState(\"\");\n//   const [descricaoPizza, setDescricaoPizza] = useState(\"\");\n//   const [nomeImagem, setNomeImagem] = useState(\"\");\n//   const [valorPequeno, setValorPequeno] = useState(\"\");\n//   const [valorMedio, setValorMedio] = useState(\"\");\n//   const [valorGrande, setValorGrande] = useState(\"\");\n\n//   function handleSubmitPizzaAdd(e) {\n//     e.preventDefault();\n\n//     if (\n//       !nomePizza ||\n//       !descricaoPizza ||\n//       !nomeImagem ||\n//       !valorPequeno ||\n//       !valorMedio ||\n//       !valorGrande\n//     ) {\n//       return;\n//     }\n\n//     const id = crypto.randomUUID();\n//     const novaPizza = {\n//       id,\n//       name: nomePizza,\n//       description: descricaoPizza,\n//       image: nomeImagem,\n//       sizes: [\"Pequena\", \"M√©dia\", \"Grande\"],\n//       prices: { small: valorPequeno, medium: valorMedio, large: valorGrande },\n//     };\n\n//     onAddItem(novaPizza);\n\n//     setNomePizza(\"\");\n//     setDescricaoPizza(\"\");\n//     setNomeImagem(\"\");\n//     setValorPequeno(\"\");\n//     setValorMedio(\"\");\n//     setValorGrande(\"\");\n//   }\n\n//   return (\n//     <form className=\"form-add-pizza\" onSubmit={handleSubmitPizzaAdd}>\n//       <button className=\"btn-form-close\" onClick={onToggleOpen}>\n//         X\n//       </button>\n//       <h3>Nova Pizza</h3>\n//       <div>\n//         <label>Nome da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={nomePizza}\n//           onChange={(e) => setNomePizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Descri√ß√£o da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={descricaoPizza}\n//           onChange={(e) => setDescricaoPizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>URL da imagem</label>\n//         <input\n//           type=\"text\"\n//           value={nomeImagem}\n//           onChange={(e) => setNomeImagem(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <p>Valores das pizzas</p>\n//       <div>\n//         <label>Tamanho pequeno (P)</label>\n//         <input\n//           type=\"number\"\n//           value={valorPequeno}\n//           onChange={(e) => setValorPequeno(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho m√©dio (M)</label>\n//         <input\n//           type=\"number\"\n//           value={valorMedio}\n//           onChange={(e) => setValorMedio(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho Grande (G)</label>\n//         <input\n//           type=\"number\"\n//           value={valorGrande}\n//           onChange={(e) => setValorGrande(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button className=\"btn-form-add-pizza\">Adicionar</button>\n//     </form>\n//   );\n// }\n\n// function ModalPizza({ pizzaSelected, setPizzaSelected }) {\n//   const [quantity, setQuantity] = useState(1);\n//   const [sizePizzaSelected, setSizePizzaSelected] = useState(\n//     pizzaSelected.sizes[2]\n//   );\n//   const [price, setPrice] = useState(pizzaSelected.prices.large);\n\n//   // Fun√ß√£o para definir o tamanho da pizza e o pre√ßo correspondente\n//   function handleSizeChange(size) {\n//     setSizePizzaSelected(size);\n//     setQuantity(1);\n\n//     if (size === \"Pequena\") {\n//       setPrice(pizzaSelected.prices.small);\n//     } else if (size === \"M√©dia\") {\n//       setPrice(pizzaSelected.prices.medium);\n//     } else {\n//       setPrice(pizzaSelected.prices.large);\n//     }\n//   }\n\n//   function handleIncrease() {\n//     setQuantity((prev) => prev + 1);\n//   }\n\n//   function handleDecrease() {\n//     setQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n//   }\n\n//   return (\n//     <div className=\"modal-pizza\">\n//       <button className=\"btn-form-close\" onClick={() => setPizzaSelected(null)}>\n//         X\n//       </button>\n//       <h3>{pizzaSelected.name}</h3>\n//       <img src={pizzaSelected.image} alt={pizzaSelected.name} />\n//       <div className=\"modal-pizza-sizes\">\n//         {pizzaSelected.sizes.map((size, index) => (\n//           <p\n//             key={index}\n//             className={`model-pizza-size ${\n//               sizePizzaSelected === size ? \"active-size\" : \"\"\n//             }`}\n//             onClick={() => handleSizeChange(size)} // Muda o tamanho e atualiza o pre√ßo\n//           >\n//             {size}\n//           </p>\n//         ))}\n//       </div>\n//       <p className=\"modal-pizza-desc\">{pizzaSelected.description}</p>\n//       <div className=\"modal-pizza-area-qtd-adc\">\n//         <div className=\"quantity-controls\">\n//           <button onClick={handleDecrease}>-</button>\n//           <p>{quantity}</p>\n//           <button onClick={handleIncrease}>+</button>\n//         </div>\n//         <div className=\"modal-pizza-addcart-price\">\n//           <p>R${price * quantity}.00</p>\n//           <button>Adicionar</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function Cart() {\n//   return (\n//     <div className=\"cart-area\">\n//       <h2>Carrinho üçï</h2>\n//       <ul>\n//         <CartItem />\n//         <CartItem />\n//         <CartItem />\n//       </ul>\n//       <div className=\"cart-area-sub\">\n//         <p>Subtotal</p>\n//         <p>R$ 60,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Desconto (-5%)</p>\n//         <p>R$ 5,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Entrega</p>\n//         <p>R$ 10,00</p>\n//       </div>\n//       <div className=\"cart-area-sub sem-borda\">\n//         <p>Total</p>\n//         <p>R$ 65,00</p>\n//       </div>\n//       <button className=\"btn-cart-finish\">Finalizar compra</button>\n//     </div>\n//   );\n// }\n\n// function CartItem() {\n//   return (\n//     <li>\n//       <div className=\"cart-item-left\">\n//         <img src=\"https://iili.io/JrJ47pa.png\" alt=\"Pizza\" />\n//         <p>\n//           <b>Calabresa</b> <span>(G)</span> <span>R$ 20,00</span>\n//         </p>\n//       </div>\n//       <div className=\"cart-item-right\">\n//         <button>-</button>\n//         <p>1</p>\n//         <button>+</button>\n//       </div>\n//     </li>\n//   );\n// }\nimport { useState } from \"react\";\nimport { cardapio } from \"./arrayPizzasInicial\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [listaCardapio, setListaCardapio] = useState(cardapio);\n  const [formIsOpen, setFormIsOpen] = useState(false);\n  const [pizzaSelected, setPizzaSelected] = useState(null);\n  const [cart, setCart] = useState([]);\n  function ToggleOpenForm() {\n    setFormIsOpen(prev => !prev);\n  }\n  function handleAddItems(item) {\n    setListaCardapio(items => [...items, item]);\n    setFormIsOpen(false);\n  }\n  function handleSelectedPizza(item) {\n    setPizzaSelected(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === item.id ? null : item);\n  }\n  function handleAddToCart(pizza, quantity, size) {\n    // Vamos usar uma chave √∫nica para itens de mesmo tipo mas com tamanhos diferentes\n    const cartItemKey = `${pizza.id}-${size}`;\n    const existingCartItem = cart.find(item => item.key === cartItemKey);\n    if (existingCartItem) {\n      // Atualiza a quantidade se o item j√° estiver no carrinho\n      setCart(prev => prev.map(item => item.key === cartItemKey ? {\n        ...item,\n        quantity: item.quantity + quantity\n      } : item));\n    } else {\n      // Adiciona um novo item ao carrinho\n      const newCartItem = {\n        key: cartItemKey,\n        ...pizza,\n        size,\n        quantity,\n        price: pizza.prices[size.toLowerCase()]\n      };\n      setCart(prev => [...prev, newCartItem]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonAddPizza, {\n      onClick: ToggleOpenForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-area\",\n      children: [/*#__PURE__*/_jsxDEV(ItemsList, {\n        listaCardapio: listaCardapio,\n        onSelectedPizza: handleSelectedPizza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cart, {\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), formIsOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Overlay, {\n        onClick: ToggleOpenForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormAddPizza, {\n        onAddItem: handleAddItems,\n        onToggleOpen: ToggleOpenForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), pizzaSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Overlay, {\n        onClick: () => setPizzaSelected(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalPizza, {\n        pizzaSelected: pizzaSelected,\n        setPizzaSelected: setPizzaSelected,\n        handleAddToCart: handleAddToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8dJRTs4Lp8Arr4BpwyMlx9Sp/XA=\");\n_c = App;\nfunction ModalPizza({\n  pizzaSelected,\n  setPizzaSelected,\n  handleAddToCart\n}) {\n  _s2();\n  const [quantity, setQuantity] = useState(1);\n  const [sizePizzaSelected, setSizePizzaSelected] = useState(pizzaSelected.sizes[2]);\n  const [price, setPrice] = useState(pizzaSelected.prices.large);\n  function handleSizeChange(size) {\n    setSizePizzaSelected(size);\n    setQuantity(1);\n    if (size === \"Pequena\") {\n      setPrice(pizzaSelected.prices.small);\n    } else if (size === \"M√©dia\") {\n      setPrice(pizzaSelected.prices.medium);\n    } else {\n      setPrice(pizzaSelected.prices.large);\n    }\n  }\n  function handleIncrease() {\n    setQuantity(prev => prev + 1);\n  }\n  function handleDecrease() {\n    setQuantity(prev => prev > 1 ? prev - 1 : 1);\n  }\n  function handleAddToCartClick() {\n    handleAddToCart(pizzaSelected, quantity, sizePizzaSelected);\n    setPizzaSelected(null); // Fechar modal ap√≥s adicionar ao carrinho\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-pizza\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-form-close\",\n      onClick: () => setPizzaSelected(null),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: pizzaSelected.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pizzaSelected.image,\n      alt: pizzaSelected.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-pizza-sizes\",\n      children: pizzaSelected.sizes.map((size, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `model-pizza-size ${sizePizzaSelected === size ? \"active-size\" : \"\"}`,\n        onClick: () => handleSizeChange(size),\n        children: size\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"modal-pizza-desc\",\n      children: pizzaSelected.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-pizza-area-qtd-adc\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quantity-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDecrease,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleIncrease,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-pizza-addcart-price\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"R$\", price * quantity, \".00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddToCartClick,\n          children: \"Adicionar ao Carrinho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n_s2(ModalPizza, \"kicxQOsxlnuzXt3adzCEcsTJYqk=\");\n_c2 = ModalPizza;\nfunction Cart({\n  cart\n}) {\n  const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Carrinho \\uD83C\\uDF55\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: item\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-area-sub\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Subtotal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"R$ \", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-cart-finish\",\n      children: \"Finalizar compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Cart;\nfunction CartItem({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        alt: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", item.size, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 30\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"R$ \", item.price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n}\n_c4 = CartItem;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ModalPizza\");\n$RefreshReg$(_c3, \"Cart\");\n$RefreshReg$(_c4, \"CartItem\");","map":{"version":3,"names":["useState","cardapio","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","listaCardapio","setListaCardapio","formIsOpen","setFormIsOpen","pizzaSelected","setPizzaSelected","cart","setCart","ToggleOpenForm","prev","handleAddItems","item","items","handleSelectedPizza","id","handleAddToCart","pizza","quantity","size","cartItemKey","existingCartItem","find","key","map","newCartItem","price","prices","toLowerCase","children","ButtonAddPizza","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","ItemsList","onSelectedPizza","Cart","Overlay","FormAddPizza","onAddItem","onToggleOpen","ModalPizza","_c","_s2","setQuantity","sizePizzaSelected","setSizePizzaSelected","sizes","setPrice","large","handleSizeChange","small","medium","handleIncrease","handleDecrease","handleAddToCartClick","name","src","image","alt","index","description","_c2","totalPrice","reduce","total","CartItem","toFixed","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/Leonardo/Desktop/react-estudo/projeto-cardapio/src/App.js"],"sourcesContent":["// import { useState } from \"react\";\n// import { cardapio } from \"./arrayPizzasInicial\";\n// import \"./index.css\";\n\n// export default function App() {\n//   const [listaCardapio, setListaCardapio] = useState(cardapio);\n//   const [formIsOpen, setFormIsOpen] = useState(false);\n//   const [pizzaSelected, setPizzaSelected] = useState(null);\n//   const [cart, setCart] = useState([]);\n\n//   function ToggleOpenForm() {\n//     setFormIsOpen((item) => !item);\n//   }\n\n//   function handleAddItems(item) {\n//     setListaCardapio((items) => [...items, item]);\n//     setFormIsOpen(false);\n//   }\n\n//   function handleSelectedPizza(item) {\n//     setPizzaSelected((itematual) => (itematual?.id === item.id ? null : item));\n//   }\n\n//   function handleAddToCart(item) {\n//     if (cart.some((cartItem) => cartItem.id === item.id)) {\n//       setCart((items) =>\n//         items.map((cartItem) =>\n//           cartItem.id === item.id\n//             ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//             : cartItem\n//         )\n//       );\n//     } else {\n//       setCart((items) => [...items, { ...item }]);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       {/* <Header /> */}\n//       <ButtonAddPizza onClick={ToggleOpenForm} />\n//       <div className=\"main-area\">\n//         <ItemsList\n//           listaCardapio={listaCardapio}\n//           onSelectedPizza={handleSelectedPizza}\n//         />\n//         <Cart />\n//       </div>\n//       {formIsOpen && (\n//         <>\n//           <Overlay onClick={ToggleOpenForm} />\n//           <FormAddPizza\n//             onAddItem={handleAddItems}\n//             onToggleOpen={ToggleOpenForm}\n//           />\n//         </>\n//       )}\n//       {pizzaSelected && (\n//         <>\n//           <Overlay onClick={() => setPizzaSelected(null)} />\n//           <ModalPizza\n//             pizzaSelected={pizzaSelected}\n//             setPizzaSelected={setPizzaSelected}\n//           />\n//         </>\n//       )}\n//       {/* <Footer /> */}\n//     </div>\n//   );\n// }\n\n// function ButtonAddPizza({ onClick }) {\n//   return (\n//     <button className=\"btn-add-pizza\" onClick={onClick}>\n//       Adicionar Pizza ao card√°pio\n//     </button>\n//   );\n// }\n\n// function ItemsList({ listaCardapio, onSelectedPizza }) {\n//   return (\n//     <ul className=\"pizza-area\">\n//       {listaCardapio.map((item) => (\n//         <Item item={item} key={item.id} onClick={onSelectedPizza} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Item({ item, onClick }) {\n//   return (\n//     <li className=\"pizzas\">\n//       <img src={item.image} alt={item.name} />\n//       <h3>{item.name}</h3>\n//       <p className=\"pizzas-desc\">{item.description}</p>\n//       <p className=\"pizzas-price\">R$ {item.prices.large},00</p>\n//       <button onClick={() => onClick(item)}>+</button>\n//     </li>\n//   );\n// }\n\n// function Overlay({ onClick }) {\n//   return <div className=\"overlay\" onClick={onClick}></div>;\n// }\n\n// function FormAddPizza({ onAddItem, onToggleOpen }) {\n//   const [nomePizza, setNomePizza] = useState(\"\");\n//   const [descricaoPizza, setDescricaoPizza] = useState(\"\");\n//   const [nomeImagem, setNomeImagem] = useState(\"\");\n//   const [valorPequeno, setValorPequeno] = useState(\"\");\n//   const [valorMedio, setValorMedio] = useState(\"\");\n//   const [valorGrande, setValorGrande] = useState(\"\");\n\n//   function handleSubmitPizzaAdd(e) {\n//     e.preventDefault();\n\n//     if (\n//       !nomePizza ||\n//       !descricaoPizza ||\n//       !nomeImagem ||\n//       !valorPequeno ||\n//       !valorMedio ||\n//       !valorGrande\n//     ) {\n//       return;\n//     }\n\n//     const id = crypto.randomUUID();\n//     const novaPizza = {\n//       id,\n//       name: nomePizza,\n//       description: descricaoPizza,\n//       image: nomeImagem,\n//       sizes: [\"Pequena\", \"M√©dia\", \"Grande\"],\n//       prices: { small: valorPequeno, medium: valorMedio, large: valorGrande },\n//     };\n\n//     onAddItem(novaPizza);\n\n//     setNomePizza(\"\");\n//     setDescricaoPizza(\"\");\n//     setNomeImagem(\"\");\n//     setValorPequeno(\"\");\n//     setValorMedio(\"\");\n//     setValorGrande(\"\");\n//   }\n\n//   return (\n//     <form className=\"form-add-pizza\" onSubmit={handleSubmitPizzaAdd}>\n//       <button className=\"btn-form-close\" onClick={onToggleOpen}>\n//         X\n//       </button>\n//       <h3>Nova Pizza</h3>\n//       <div>\n//         <label>Nome da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={nomePizza}\n//           onChange={(e) => setNomePizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Descri√ß√£o da pizza</label>\n//         <input\n//           type=\"text\"\n//           value={descricaoPizza}\n//           onChange={(e) => setDescricaoPizza(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>URL da imagem</label>\n//         <input\n//           type=\"text\"\n//           value={nomeImagem}\n//           onChange={(e) => setNomeImagem(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <p>Valores das pizzas</p>\n//       <div>\n//         <label>Tamanho pequeno (P)</label>\n//         <input\n//           type=\"number\"\n//           value={valorPequeno}\n//           onChange={(e) => setValorPequeno(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho m√©dio (M)</label>\n//         <input\n//           type=\"number\"\n//           value={valorMedio}\n//           onChange={(e) => setValorMedio(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Tamanho Grande (G)</label>\n//         <input\n//           type=\"number\"\n//           value={valorGrande}\n//           onChange={(e) => setValorGrande(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button className=\"btn-form-add-pizza\">Adicionar</button>\n//     </form>\n//   );\n// }\n\n// function ModalPizza({ pizzaSelected, setPizzaSelected }) {\n//   const [quantity, setQuantity] = useState(1);\n//   const [sizePizzaSelected, setSizePizzaSelected] = useState(\n//     pizzaSelected.sizes[2]\n//   );\n//   const [price, setPrice] = useState(pizzaSelected.prices.large);\n\n//   // Fun√ß√£o para definir o tamanho da pizza e o pre√ßo correspondente\n//   function handleSizeChange(size) {\n//     setSizePizzaSelected(size);\n//     setQuantity(1);\n\n//     if (size === \"Pequena\") {\n//       setPrice(pizzaSelected.prices.small);\n//     } else if (size === \"M√©dia\") {\n//       setPrice(pizzaSelected.prices.medium);\n//     } else {\n//       setPrice(pizzaSelected.prices.large);\n//     }\n//   }\n\n//   function handleIncrease() {\n//     setQuantity((prev) => prev + 1);\n//   }\n\n//   function handleDecrease() {\n//     setQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n//   }\n\n//   return (\n//     <div className=\"modal-pizza\">\n//       <button className=\"btn-form-close\" onClick={() => setPizzaSelected(null)}>\n//         X\n//       </button>\n//       <h3>{pizzaSelected.name}</h3>\n//       <img src={pizzaSelected.image} alt={pizzaSelected.name} />\n//       <div className=\"modal-pizza-sizes\">\n//         {pizzaSelected.sizes.map((size, index) => (\n//           <p\n//             key={index}\n//             className={`model-pizza-size ${\n//               sizePizzaSelected === size ? \"active-size\" : \"\"\n//             }`}\n//             onClick={() => handleSizeChange(size)} // Muda o tamanho e atualiza o pre√ßo\n//           >\n//             {size}\n//           </p>\n//         ))}\n//       </div>\n//       <p className=\"modal-pizza-desc\">{pizzaSelected.description}</p>\n//       <div className=\"modal-pizza-area-qtd-adc\">\n//         <div className=\"quantity-controls\">\n//           <button onClick={handleDecrease}>-</button>\n//           <p>{quantity}</p>\n//           <button onClick={handleIncrease}>+</button>\n//         </div>\n//         <div className=\"modal-pizza-addcart-price\">\n//           <p>R${price * quantity}.00</p>\n//           <button>Adicionar</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function Cart() {\n//   return (\n//     <div className=\"cart-area\">\n//       <h2>Carrinho üçï</h2>\n//       <ul>\n//         <CartItem />\n//         <CartItem />\n//         <CartItem />\n//       </ul>\n//       <div className=\"cart-area-sub\">\n//         <p>Subtotal</p>\n//         <p>R$ 60,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Desconto (-5%)</p>\n//         <p>R$ 5,00</p>\n//       </div>\n//       <div className=\"cart-area-sub\">\n//         <p>Entrega</p>\n//         <p>R$ 10,00</p>\n//       </div>\n//       <div className=\"cart-area-sub sem-borda\">\n//         <p>Total</p>\n//         <p>R$ 65,00</p>\n//       </div>\n//       <button className=\"btn-cart-finish\">Finalizar compra</button>\n//     </div>\n//   );\n// }\n\n// function CartItem() {\n//   return (\n//     <li>\n//       <div className=\"cart-item-left\">\n//         <img src=\"https://iili.io/JrJ47pa.png\" alt=\"Pizza\" />\n//         <p>\n//           <b>Calabresa</b> <span>(G)</span> <span>R$ 20,00</span>\n//         </p>\n//       </div>\n//       <div className=\"cart-item-right\">\n//         <button>-</button>\n//         <p>1</p>\n//         <button>+</button>\n//       </div>\n//     </li>\n//   );\n// }\nimport { useState } from \"react\";\nimport { cardapio } from \"./arrayPizzasInicial\";\nimport \"./index.css\";\n\nexport default function App() {\n  const [listaCardapio, setListaCardapio] = useState(cardapio);\n  const [formIsOpen, setFormIsOpen] = useState(false);\n  const [pizzaSelected, setPizzaSelected] = useState(null);\n  const [cart, setCart] = useState([]);\n\n  function ToggleOpenForm() {\n    setFormIsOpen((prev) => !prev);\n  }\n\n  function handleAddItems(item) {\n    setListaCardapio((items) => [...items, item]);\n    setFormIsOpen(false);\n  }\n\n  function handleSelectedPizza(item) {\n    setPizzaSelected((prev) => (prev?.id === item.id ? null : item));\n  }\n\n  function handleAddToCart(pizza, quantity, size) {\n    // Vamos usar uma chave √∫nica para itens de mesmo tipo mas com tamanhos diferentes\n    const cartItemKey = `${pizza.id}-${size}`;\n\n    const existingCartItem = cart.find((item) => item.key === cartItemKey);\n\n    if (existingCartItem) {\n      // Atualiza a quantidade se o item j√° estiver no carrinho\n      setCart((prev) =>\n        prev.map((item) =>\n          item.key === cartItemKey\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        )\n      );\n    } else {\n      // Adiciona um novo item ao carrinho\n      const newCartItem = {\n        key: cartItemKey,\n        ...pizza,\n        size,\n        quantity,\n        price: pizza.prices[size.toLowerCase()],\n      };\n\n      setCart((prev) => [...prev, newCartItem]);\n    }\n  }\n\n  return (\n    <div>\n      <ButtonAddPizza onClick={ToggleOpenForm} />\n      <div className=\"main-area\">\n        <ItemsList\n          listaCardapio={listaCardapio}\n          onSelectedPizza={handleSelectedPizza}\n        />\n        <Cart cart={cart} />\n      </div>\n      {formIsOpen && (\n        <>\n          <Overlay onClick={ToggleOpenForm} />\n          <FormAddPizza\n            onAddItem={handleAddItems}\n            onToggleOpen={ToggleOpenForm}\n          />\n        </>\n      )}\n      {pizzaSelected && (\n        <>\n          <Overlay onClick={() => setPizzaSelected(null)} />\n          <ModalPizza\n            pizzaSelected={pizzaSelected}\n            setPizzaSelected={setPizzaSelected}\n            handleAddToCart={handleAddToCart}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction ModalPizza({ pizzaSelected, setPizzaSelected, handleAddToCart }) {\n  const [quantity, setQuantity] = useState(1);\n  const [sizePizzaSelected, setSizePizzaSelected] = useState(\n    pizzaSelected.sizes[2]\n  );\n  const [price, setPrice] = useState(pizzaSelected.prices.large);\n\n  function handleSizeChange(size) {\n    setSizePizzaSelected(size);\n    setQuantity(1);\n\n    if (size === \"Pequena\") {\n      setPrice(pizzaSelected.prices.small);\n    } else if (size === \"M√©dia\") {\n      setPrice(pizzaSelected.prices.medium);\n    } else {\n      setPrice(pizzaSelected.prices.large);\n    }\n  }\n\n  function handleIncrease() {\n    setQuantity((prev) => prev + 1);\n  }\n\n  function handleDecrease() {\n    setQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n  }\n\n  function handleAddToCartClick() {\n    handleAddToCart(pizzaSelected, quantity, sizePizzaSelected);\n    setPizzaSelected(null); // Fechar modal ap√≥s adicionar ao carrinho\n  }\n\n  return (\n    <div className=\"modal-pizza\">\n      <button className=\"btn-form-close\" onClick={() => setPizzaSelected(null)}>\n        X\n      </button>\n      <h3>{pizzaSelected.name}</h3>\n      <img src={pizzaSelected.image} alt={pizzaSelected.name} />\n      <div className=\"modal-pizza-sizes\">\n        {pizzaSelected.sizes.map((size, index) => (\n          <p\n            key={index}\n            className={`model-pizza-size ${\n              sizePizzaSelected === size ? \"active-size\" : \"\"\n            }`}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </p>\n        ))}\n      </div>\n      <p className=\"modal-pizza-desc\">{pizzaSelected.description}</p>\n      <div className=\"modal-pizza-area-qtd-adc\">\n        <div className=\"quantity-controls\">\n          <button onClick={handleDecrease}>-</button>\n          <p>{quantity}</p>\n          <button onClick={handleIncrease}>+</button>\n        </div>\n        <div className=\"modal-pizza-addcart-price\">\n          <p>R${price * quantity}.00</p>\n          <button onClick={handleAddToCartClick}>Adicionar ao Carrinho</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Cart({ cart }) {\n  const totalPrice = cart.reduce(\n    (total, item) => total + item.price * item.quantity,\n    0\n  );\n\n  return (\n    <div className=\"cart-area\">\n      <h2>Carrinho üçï</h2>\n      <ul>\n        {cart.map((item) => (\n          <CartItem key={item.key} item={item} />\n        ))}\n      </ul>\n      <div className=\"cart-area-sub\">\n        <p>Subtotal</p>\n        <p>R$ {totalPrice.toFixed(2)}</p>\n      </div>\n      <button className=\"btn-cart-finish\">Finalizar compra</button>\n    </div>\n  );\n}\n\nfunction CartItem({ item }) {\n  return (\n    <li>\n      <div className=\"cart-item-left\">\n        <img src={item.image} alt={item.name} />\n        <p>\n          <b>{item.name}</b> <span>({item.size})</span>{\" \"}\n          <span>R$ {item.price.toFixed(2)}</span>\n        </p>\n      </div>\n      <div className=\"cart-item-right\">\n        <button>-</button>\n        <p>{item.quantity}</p>\n        <button>+</button>\n      </div>\n    </li>\n  );\n}\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}